(window.webpackJsonpCatCharts=window.webpackJsonpCatCharts||[]).push([[31],{94:function(n,e,a){"use strict";a.r(e);var t={components:{}},o=a(0),r=Object(o.a)(t,function(){var n=this.$createElement,e=this._self._c||n;return e("section",[e("h2",[this._v("自定义")]),this._v(" "),this._m(0),this._v(" "),this._m(1),this._v(" "),e("block-demo",{attrs:{tip:"",source:"const data = [\n  { value: 3350, label: '直接访问' },\n  { value: 3100, label: '邮件营销' },\n  { value: 2340, label: '联盟广告' },\n  { value: 1350, label: '视频广告' },\n  { value: 1548, label: '搜索引擎' }\n]\n\nconst { Chart, InteractionHooks } = qchart\n\nconst chart = new Chart({ container: '#app', forceFit: true })\n\nconst pie = new qchart.Pie({\n  radius: 0.6,\n  innerRadius: 0.2\n})\n  .source(data)\n  .setDataFields({ x: 'label', y: 'value' })\n\nconst oApp = document.querySelector('#app')\nconst total = data.reduce((a, c) => (a += c.value), 0)\nconst legends = []\n\nconst createLegend = data => {\n  if (legends[data.index]) {\n    // 已经创建\n    return\n  }\n\n  const oDiv = document.createElement('div')\n\n  oDiv.style = `\n    position: relative;\n    z-index: 1000;\n  `\n\n  const setInnerHTML = data => {\n    const color1 = data.disabled ? '#ccc' : '#333'\n    const color2 = data.disabled ? '#ccc' : data.color\n\n    oDiv.innerHTML = `\n      <span style=\"color: ${color2};\">\n        ${data.index}\n      </span>\n      <span style=\"margin-left: 10px; color: ${color1};\">${data.label}</span>\n      <span style=\"margin-left: 10px; color: ${color2};\">\n        ${((data.value / total) * 100).toFixed(2)}%\n      </span>\n      <span style=\"margin-left: 10px; color: ${color1};\">${data.value}</span>\n    `\n  }\n\n  setInnerHTML(data)\n\n  oDiv.addEventListener('click', () => {\n    data.disabled = !data.disabled\n    setInnerHTML(data)\n    // 发射交互钩子\n    chart.emit(InteractionHooks.toggleLegend, data)\n  })\n\n  legends[data.index] = oDiv\n\n  oApp.appendChild(oDiv)\n}\n\n// 监听交互钩子\nchart.on(InteractionHooks.renderLegend, createLegend)\n\nchart.add(pie)\nchart.render()\n"}},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[this._v("const data = [\n  { value: 3350, label: '直接访问' },\n  { value: 3100, label: '邮件营销' },\n  { value: 2340, label: '联盟广告' },\n  { value: 1350, label: '视频广告' },\n  { value: 1548, label: '搜索引擎' }\n]\n\nconst { Chart, InteractionHooks } = qchart\n\nconst chart = new Chart({ container: '#app', forceFit: true })\n\nconst pie = new qchart.Pie({\n  radius: 0.6,\n  innerRadius: 0.2\n})\n  .source(data)\n  .setDataFields({ x: 'label', y: 'value' })\n\nconst oApp = document.querySelector('#app')\nconst total = data.reduce((a, c) => (a += c.value), 0)\nconst legends = []\n\nconst createLegend = data => {\n  if (legends[data.index]) {\n    // 已经创建\n    return\n  }\n\n  const oDiv = document.createElement('div')\n\n  oDiv.style = `\n    position: relative;\n    z-index: 1000;\n  `\n\n  const setInnerHTML = data => {\n    const color1 = data.disabled ? '#ccc' : '#333'\n    const color2 = data.disabled ? '#ccc' : data.color\n\n    oDiv.innerHTML = `\n      <span style=\"color: ${color2};\">\n        ${data.index}\n      </span>\n      <span style=\"margin-left: 10px; color: ${color1};\">${data.label}</span>\n      <span style=\"margin-left: 10px; color: ${color2};\">\n        ${((data.value / total) * 100).toFixed(2)}%\n      </span>\n      <span style=\"margin-left: 10px; color: ${color1};\">${data.value}</span>\n    `\n  }\n\n  setInnerHTML(data)\n\n  oDiv.addEventListener('click', () => {\n    data.disabled = !data.disabled\n    setInnerHTML(data)\n    // 发射交互钩子\n    chart.emit(InteractionHooks.toggleLegend, data)\n  })\n\n  legends[data.index] = oDiv\n\n  oApp.appendChild(oDiv)\n}\n\n// 监听交互钩子\nchart.on(InteractionHooks.renderLegend, createLegend)\n\nchart.add(pie)\nchart.render()\n")])])])],1)},[function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("如果提供的 "),e("code",{pre:!0},[this._v("Legend")]),this._v(" 无法满足个性化需求。可以通过监听 "),e("code",{pre:!0},[this._v("chart")]),this._v(" 上的 "),e("code",{pre:!0},[this._v("InteractionHooks")]),this._v(" 来完成自定义。")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[this._v("const")]),this._v(" { Chart, InteractionHooks } = qchart\n\nchart.on(InteractionHooks.renderLegend, createLegend)\nchart.emit(InteractionHooks.toggleLegend, data)\n")])])}],!1,null,null,null);e.default=r.exports}}]);